#input file for gCTF parser
input_folder = /mnt/local-scratch/2020-06-10-test-gctf/ru,k,k#absolute path
image_folder = /mnt/local-scratch/2020-06-10-test-gctf/ #source folder for images NOT YET IMPLEMENTED
num_img = 0 # number of images to analyze. o = all images, 100 will select 100 random images from the directory.NOT YET IMPLEMENTED
cleanup = 1  # delete temporary mrc files after run NOT YET IMPLEMENTED

extension = epa
run_gctf = 1  #1 for run

plot_mrc = 1  # 0 for run
num_cols = 4 # parameter for image gallery
thumb_size = 512 # thumb size for image gallery

parse_gctf_log = 1 # 1 for  run
plot_grpahs = 1
generate_tables = 1
create_pdf = 1

#experiment summary
# run pp data, changed pp searstep to 5 ccc min, set box 512
#gCTF parameter

binary = /opt/relion3/Gctf_v1.18/gctf_pp   #locatoin of gCTF bin file
#The following parameters are implemented

--apix      =          1.06         #     Pixel size
--kV        =          300          #     High tension in Kilovolt, typically 300, 200 or 120
--cs        =          0.1          #     Spherical aberration, in  millimeter
--ac        =          0.1          #     Amplitude contrast; normal range 0.04~0.1; pure ice 0.04, carbon 0.1; but doesn't matter too much if using slightly wrong value or phase shift will be refined
--search_phase_shift   =   1        #       switch phase shift search on / off 1 for 0n
--phase_shift_L   =    30           #     User defined phase shift, lowest phase shift,  in degree; typically, ~90.0 for micrographs using phase plate
--phase_shift_H   =    100          #     User defined phase shift, highest phase shift, final range will be (phase_shift_L, phase_shift_H)
--phase_shift_S   =    5.0          #     User defined phase shift search step; don't worry about the accuracy; this is just the search step, Gctf will refine the phase shift anyway.
--phase_shift_T   =    1            #     Phase shift target in the search; 1: CCC; 2: resolution limit;
--cosearch_refine_ps  = 0           #      Specify this option to do refinement during phase shift search. Default approach is to do refinement after search
--refine_2d_T        = 1            #     Refinement type: 1, 2, 3 allowed; NOTE:  --phase_shift_T is the overall target, but refine_2d_T is the concrete refinement approaches.
--resL           =     100          #     Lowest Resolution to be used for search, in angstrom
--resH           =     4            #     Highest Resolution to be used for search, in angstrom
--boxsize        =     1024         #     Boxsize in pixel to be used for FFT, 512 or 1024 highly recommended


#GCTF PARAMETER CURRENTLY NOT IMPLEMENTED

#Additional options(not suggested, only try to optimize in difficult cases), default values and description:
         --dstep          =     14.0         #     Detector size in micrometer; don't worry if unknown; just use default.
         --defL           =     5000         #     Lowest defocus value to search, in angstrom
         --defH           =     90000        #     Highest defocus value to search, in angstrom
         --defS           =     500          #     Step of defocus value used to search, in angstrom
         --astm           =     1000         #     Estimated astigmation in angstrom, don't need to be accurate, within 0.1~10 times is OK
         --bfac           =     150          #     Bfactor used to decrease high resolution amplitude,A^2; NOT the estimated micrograph Bfactor! suggested range 50~300 except using 'REBS method'.
         --resL           =     50           #     Lowest Resolution to be used for search, in angstrom
         --resH           =     4            #     Highest Resolution to be used for search, in angstrom
         --boxsize        =     512         #     Boxsize in pixel to be used for FFT, 512 or 1024 highly recommended
#Advanced additional options:
         --do_EPA          =    1            #     1: Do Equiphase average; 0: Don't do;  only for nice output, will NOT be used for CTF determination.
         --EPA_oversmp     =    4            #     Over-sampling factor for EPA.
         --overlap         =    0.5          #     Overlapping factor for grid boxes sampling, for boxsize=512, 0.5 means 256 pixeles overlapping; use 0.8 for low SNR micrographs
         --convsize        =    85           #     Boxsize to be used for smoothing, suggested 1/10 ~ 1/20 of boxsize in pixel, e.g. 40 for 512 boxsize
         --smooth_resL     =    0            #     Provide a reasonable resolution for low frequency background smoothing; 20 angstrom suggested, 10-50 is proper range High resolution refinement options:
         --do_Hres_ref     =    0            #     Whether to do High-resolution refinement or not, very useful for selecting high quality micrographs
         --Href_resL       =    15.0         #     Lowest Resolution  to be used for High-resolution refinement, in angstrom
         --Href_resH       =    4.0          #     Highest Resolution  to be used for High-resolution refinement, in angstrom
         --Href_bfac       =    50           #     Bfactor to be used for High-resolution refinement,A^2 NOT the estimated micrograph Bfactor!
#Bfactor estimation options:
         --B_resL          =  15.0              Lowest resolution for Bfactor estimation; This output Bfactor is the real estimation of the micrograph
         --B_resH          =  6.0               Highest resolution for Bfactor estimation
#Movie options to calculate defocuses of each frame:
         --do_mdef_refine   = 0           #      Whether to do CTF refinement of each frames, by default it will do averaged frames. Not quite useful at the moment, but maybe in future.
         --mdef_aveN        = 1           #      Average number of movie frames for movie or particle stack CTF refinement
         --mdef_fit         = 0           #      0: no fitting; 1: linear fitting defocus changes in Z-direction
         --mdef_ave_type    = 0           #      0: coherent average, average FFT with phase information(suggested for movies); 1:incoherent average, only average amplitude(suggested for particle stack);
#Local refinement options to calculate defocuses of each particles:
         --do_local_refine  = 0         #        0: do not refine local defocus(default); 1: refine local defocus, need .box or .star coordinate files ('--boxsuffix' option).
         --local_radius     = 1024      #        Radius for local refinement, no weighting if the distance is larger than that
         --local_avetype    = 2         #        0: equal weights for all local areas, neither distance nor frequency is weighted; 1: single weight for each local area, only distance is weighted; 2: Guassian weighting for both distance and frequency.
         --local_areatype   = 2         #        local area type for averaging the power spectra; 1: circular; 2: rectangle         --local_autogrid_X  7                 Number of automatically generated local grid boxes in X-dimension
         --local_autogrid_Y = 7         #        Number of automatically generated local grid boxes in Y-dimension
         --local_boxsize    = 512       #        Boxsize for local refinement
         --local_overlap    = 0.5       #        Overlapping factor for grid boxes sampling
         --local_bfac       = 150       #        B-factor to be used for local CTF
         --local_resL       = 15        #        Lowest Resolution to be used for local CTF, in angstrom
         --local_resH       = 5         #        Highest Resolution to be used for local CTF, in angstrom
         --local_A_err      = 5.0       #        Estimated error of initial defocus_Angle for local CTF refinement, in degree
         --local_U_err      = 100       #        Estimated error of initial defocus_U for local CTF refinement, in angstrom
         --local_V_err      = 100       #        Estimated error of initial defocus_V for local CTF refinement, in angstrom
         --local_PS_err     = 2.0       #        Estimated error of initial phase shift for local CTF refinement, in angstrom
         --refine_local_astm = 0        #         0: only refine Z-height changes in local area (suggested); 1: refine local astigmatism (not suggested unless SNR is very good.)
#CTF refinement options(to refine user provided CTF parameters):
         --refine_input_ctf  = 0            #     1: to refine user provided CTF; 0: By default Gctf wil NOT refine user-provided CTF parameters but do ab initial determination, even if the '--input_ctfstar' is provided;
         --defU_init       =  20000.0       #    User input initial defocus_U, only for single micrograph, use '--input_ctfstar' for multiple micrographs.
         --defV_init       =  20000.0       #    User input initial defocus_V, only for single micrograph, use '--input_ctfstar' for multiple micrographs.
         --defA_init       =  0.0           #    User input initial defocus_Angle, only for single micrograph, use '--input_ctfstar' for multiple micrographs.
         --B_init          =  200.0         #    User input initial Bfactor, only for single micrograph, use '--input_ctfstar' for multiple micrographs.
         --defU_err        =  500.0         #    Estimated error of user input initial defocus_U, unlike defU_init, this will be effective for all micrographs.
         --defV_err        =  500.0         #    Estimated error of user input initial defocus_V, unlike defV_init, this will be effective for all micrographs.
         --defA_err        =  15.0          #    Estimated error of user input initial defocus_Angle,  unlike defA_init, this will be effective for all micrographs.
         --B_err           =  50.0          #    Estimated error of user input initial Bfactor, unlike B_init, this will be effective for all micrographs.
#Correction options:
         --do_phase_flip  =   0              #   Whether to do phase flip and write a new micrograph

#Validation options:
         --do_validation   =  0             #    Whether to validate the CTF determination.

#CTF output file options:
         --ctfout_resL     =  100.0         #      Lowest resolution for CTF diagnosis file. NOTE this only affects the final output of .ctf file, nothing related to CTF determination.
         --ctfout_resH     =  2.8           #      Highest resolution for CTF diagnosis file, ~Nyqiust by default.
         --ctfout_bfac     =  50            #      Bfactor for CTF diagnosis file. NOTE this only affects the final output of .ctf file, nothing related to CTF determination.
#Data queue options:
         --dp_maxN_q       =  5             #      Maximum number of data packets in the queue.
         --dp_silent       =  1             #      Data queue in silent mode
#I/O options:
         --input_ctfstar   =  micrographs_input_ctf.star   #  Input star file (must be star file) containing the raw micrographs and CTF information for further refinement.
         --boxsuffix       =  _automatch.star              #  Input .box/.star in EMAN/Relion box format, used for local refinement
         --ctfstar         =  micrographs_all_gctf.star    #  Output star files to record all CTF parameters. Use 'NULL' or 'NONE' to skip writing out the CTF star file.
         --logsuffix       =  _gctf.log                    #  Output suffix to be used for log files.
                                                            ### NOTE: use '_ctffind3.log' for old version of Relion( before 1.4), because it needs this suffix for particle extraction!
                                                           # Otherwise, you can change the suffix of CTF log files by 'rename _gctf.log _ctffind3.log *_gctf.log' and then extract your particles.
         --write_local_ctf  = 0                            #  Whether to write out a diagnosis power spectrum file for each particle.
         --plot_res_ring    = 1                            #  Whether to plot an estimated resolution ring on the final .ctf diagnosis file
         --do_unfinished    =                              #  Specify this option to continue processing the unfinished, otherwise it will overwrite everything.
         --skip_check_mrc   =                              #  Specify this option to skip checking the MRC file format. Sometimes, there are special MRC that the file size does not match head information.
	                                                       # To force Gctf run on such micrograph, specify this option might help to solve the problem.
         --skip_check_gpu    =                             #  Specify this option to skip checking the GPUs.
         --reload_ctf_files  =  0                          #  Specify this option to re-load power spectra files if you have run CTF estimation previously.
         --gid               =  0                          #  GPU id, normally it's 0, use gpu_info to get information of all available GPUs.


